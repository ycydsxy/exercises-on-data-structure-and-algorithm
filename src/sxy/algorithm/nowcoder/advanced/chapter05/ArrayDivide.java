package sxy.algorithm.nowcoder.advanced.chapter05;

/**
 * 艺术家问题
 * 
 * 给定一个正整数数组arr，将arr分成k个子数组，以每个子数组的累加和中的最大值作该划分的性能指标KPI，求子数组个数为k的不同划分中
 * KPI的最小值是多少.
 * 
 * 思路：可以用动态规划.也可以另辟蹊径，设该指标KPI=f(k,划分方法)由组数和划分方法唯一确定，定义min(f(k,:))为组数为k的所有
 * 划分中KPI的最小值.我们可以求该问题的一个转化问题:若要求划分后KPI<=m，求所有符合要求的划分中最少的子数组个数.若该问题顺利解
 * 决，就可得到一个表，每一个指标的上限值m对应一个最少的子数组个数p. 注意，该表有一定的单调性，即随着m的减少，p的值是不减的，且最
 * 后一定会增至正无穷.
 * ----------------------------------
 * KPI<= |...| m0+1 | m0 | m0-1  |...
 * ---------------------------------
 * min(k)|...|  p0  | p0 | p0+x0 |...
 * ----------------------------------
 * 表中必定有一些拐点，如上表(m0,p0)处，我们则可证，min(f(p0,:))=m0.
 * 
 * 采用反证法，设m0不是f(p0,:)的最小值，则设min(f(p0,:))=m0-x1或m0+x2（x1、x2为正整数).
 * 
 * 1.min(f(p0,:))=m0-x1.即说明存在一个划分，划分完后发现子数组个数是p0且KPI=m0-x1.但查表发现，当KPI<=m0-x1时，其
 * min(k)>p0，和上述表述矛盾，故不可能.
 *
 * 2.min(f(p0,:))=m0+x2.查表(m0,p0)发现，存在一个划分，划分完后发现子数组个数是p0且KPI<=m0<m0+x2，矛盾，故不可能.
 * 
 * 所以我们将上述表填好，就能找到答案.填表可以用二分法加速从而最终算法是一个O(N)的时间复杂度.
 * 
 * 
 * @author Kevin
 * 
 */
public class ArrayDivide {

}
